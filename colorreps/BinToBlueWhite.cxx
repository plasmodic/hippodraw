/** @file

hippodraw::BinToBWLinear class implementation

Copyright (C)  2000, 2004-2006  The Board of Trustees of The Leland Stanford
Junior University.  All Rights Reserved.

$Id: BinToBlueWhite.cxx,v 1.1 2007/01/21 21:10:54 pfkeb Exp $

*/

#include "BinToBlueWhite.h"

using namespace hippodraw;

int BinToBlueWhite::reds[256] =
 { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 5, 9, 13, 17, 21, 25, 29, 33, 37, 41, 45, 49, 53, 57, 61,
   65, 69, 73, 77, 81, 85, 90, 94, 98, 102, 106, 110, 114, 118, 122, 126, 
   130, 134, 138, 142, 146, 150, 154, 158, 162, 166, 170, 175, 179, 183, 
   187, 191, 195, 199, 203, 207, 211, 215, 219, 223, 227, 231, 235, 239, 
   243, 247, 251, 255};

int BinToBlueWhite::greens[256] =
{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 2, 4, 5, 7, 9, 10, 12, 13, 15, 17, 18, 20, 21, 23, 25, 
  26, 28, 29, 31, 33, 34, 36, 37, 39, 41, 42, 44, 45, 47, 49, 50, 52, 53,
55, 57, 58, 60, 61, 63, 65, 66, 68, 69, 71, 73, 74, 76, 77, 79, 81, 82, 
84, 85, 87, 89, 90, 92, 94, 95, 97, 98, 100, 102, 103, 105, 106, 108, 
110, 111, 113, 114, 116, 118, 119, 121, 122, 124, 126, 127, 129, 130,
132, 134, 135, 137, 138, 140, 142, 143, 145, 146, 148, 150, 151, 153, 
154, 156, 158, 159, 161, 162, 164, 166, 167, 169, 170, 172, 174, 175, 
177, 179, 180, 182, 183, 185, 187, 188, 190, 191, 193, 195, 196, 198, 
199, 201, 203, 204, 206, 207, 209, 211, 212, 214, 215, 217, 219, 220, 
222, 223, 225, 227, 228, 230, 231, 233, 235, 236, 238, 239, 241, 243, 
  244, 246, 247, 249, 251, 252, 254, 255};

int BinToBlueWhite::blues[256] =
{ 0, 1, 2, 4, 5, 6, 8, 9, 10, 12, 13, 14, 16, 17, 18, 20, 21, 
23, 24, 25, 27, 28, 29, 31, 32, 33, 35, 36, 37, 39, 40, 42, 43, 44, 46, 
47, 48, 50, 51, 52, 54, 55, 56, 58, 59, 61, 62, 63, 65, 66, 67, 69, 70, 
71, 73, 74, 75, 77, 78, 80, 81, 82, 84, 85, 86, 88, 89, 90, 92, 93, 94, 
96, 97, 99, 100, 101, 103, 104, 105, 107, 108, 109, 111, 112, 113, 115, 
116, 118, 119, 120, 122, 123, 124, 126, 127, 128, 130, 131, 132, 134, 
135, 136, 138, 139, 141, 142, 143, 145, 146, 147, 149, 150, 151, 153, 
154, 155, 157, 158, 160, 161, 162, 164, 165, 166, 168, 169, 170, 172, 
173, 174, 176, 177, 179, 180, 181, 183, 184, 185, 187, 188, 189, 191, 
192, 193, 195, 196, 198, 199, 200, 202, 203, 204, 206, 207, 208, 210, 
211, 212, 214, 215, 217, 218, 219, 221, 222, 223, 225, 226, 227, 229, 
230, 231, 233, 234, 236, 237, 238, 240, 241, 242, 244, 245, 246, 248, 
249, 250, 252, 253, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 
255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 
255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 
255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 
255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 
  255, 255 };

BinToBlueWhite::
BinToBlueWhite ( const char * name )
  : BinToColorMap ( name )
{
  m_reds.resize ( 256);
  m_greens.resize ( 256 );
  m_blues.resize ( 256 );

  for ( int i = 0; i < 256; i++ ) {
    m_reds  [i] = reds[i];
    m_greens[i] = greens[i];
    m_blues [i] = blues[i];
  }
}

BinToBlueWhite::BinToBlueWhite ( const BinToBlueWhite & bin_to_color )
  : BinToColorMap ( bin_to_color )
{
}

BinToColor * BinToBlueWhite::clone () const
{
  return new BinToBlueWhite ( *this );
}

