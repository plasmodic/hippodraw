"""
Plotting error contours for a linear regression fit.

@author J. Chiang <jchiang@slac.stanford.edu>
"""
#
#$Id: fitBug.py.in,v 1.5 2005/07/06 21:33:47 pfkeb Exp $
#

from setPath import *
import hippoplotter as plot, random, numarray

slope = 2.
intercept = 1.
sigma = 2.

gauss = random.gauss

npts = 20
x = numarray.arange(npts)
y = [gauss(slope*xx + intercept, sigma) for xx in x]
yerr = sigma*numarray.ones(npts)

nt = plot.newNTuple( (x, y, yerr), ('x', 'y', 'yerr') )

disp = plot.XYPlot(nt, 'x', 'y', yerr='yerr')

rep = disp.getDataRep ()
from hippo import Symbol
print Symbol.values
rep.set ( Symbol.opensquare )
rep.setSize ( 4 )

funcName = 'Linear'

params = ('Slope', 'Intercept')

#
# Fit these data.
#
def fitData( display, funcName ):
    func = plot.hippo.Function( funcName, display.getDataRep() )
    func.addTo(display)
    func.fit()
    paramDict = {}
    errorDict = {}
    names = func.parmNames()
    params = func.parameters()
    errors = func.principleErrors()
    for name, param, error in zip(names, params, errors):
        paramDict[name] = param
        errorDict[name] = error
    return (paramDict, errorDict, func)

(fitParams, fitErrors, func) = fitData( disp, funcName )

chi2min = func.chiSquared()

for name in fitParams.keys():
    print "%s: %.4e +/- %.4e" % (name, fitParams[name], fitErrors[name])

plot.setParam('Slope', 2., func)
print "new chi^2: %f" % func.chiSquared()

print "Now try this with the params fixed..."

func.setFixedFlags( (1, 1) )
plot.setParam('Slope', 2., func)
print "new chi^2: %f" % func.chiSquared()
